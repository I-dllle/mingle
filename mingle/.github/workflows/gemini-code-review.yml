name: Gemini Code Review

on:
  push:
    branches:
      - '**'
    paths:
      - 'be/**'
  pull_request:
    types: [opened, synchronize]

jobs:
  code-review:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Node
        uses: actions/setup-node@v3

      - name: Install GoogleGenerativeAI
        run: |
          npm install @google/generative-ai

      - name: Get git diff for PR
        if: github.event_name == 'pull_request'
        run: |
          git fetch origin "${{ github.event.pull_request.base.ref }}"
          git fetch origin "${{ github.event.pull_request.head.ref }}"
          git diff --unified=0 "origin/${{ github.event.pull_request.base.ref }}" > "diff.txt"
          echo "EVENT_TYPE=pull_request" >> $GITHUB_ENV

      - name: Get git diff for Push
        if: github.event_name == 'push'
        run: |
          git diff --unified=0 HEAD^ HEAD > "diff.txt"
          echo "EVENT_TYPE=push" >> $GITHUB_ENV

      - name: Run Gemini-1.5-flash
        id: gemini_review
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require("fs");
            const diff_output = fs.readFileSync("diff.txt", 'utf8');

            const { GoogleGenerativeAI } = require("@google/generative-ai");
            const genAI = new GoogleGenerativeAI("${{ secrets.GEMINI_API_KEY }}");
            const model = genAI.getGenerativeModel({ model: "gemini-1.5-flash" });

            // + 프롬프트를 GitHub API 형식에 맞도록 강화
            let prompt;
            if (process.env.EVENT_TYPE === 'pull_request') {
              prompt = `
You are a senior software engineer performing a code review.

Respond ONLY in valid JSON format with the following structure:
[
  {
    "path": "src/main/java/com/example/MyClass.java",
    "line": 12,
    "text": "변수명을 더 명확하게 바꾸는 것이 좋습니다.",
    "side": "RIGHT",
    "diff_hunk": "@@ -10,6 +10,7 @@ public class MyClass { ..."
  }
]

❗ Absolutely NO markdown, no explanations, no code fences, no extra formatting.
Here is the git diff:
<git diff>${diff_output}</git diff>
              `;
            } else {
              prompt = `
Explain in Korean. You are a senior software engineer and need to perform a code review based on the results of a given git diff.
Provide a detailed review of the code changes, focusing on code quality, readability, performance, and security.
Format your response in Markdown with clear headings for each file reviewed.

<git diff>${diff_output}</git diff>
              `;
            }

            const result = await model.generateContent(prompt);
            const response = await result.response;
            const text = response.text();

            fs.writeFileSync('review_result.txt', text);
            console.log('Review results saved!');

      - name: Format and add PR review comments
        if: env.EVENT_TYPE == 'pull_request'
        id: store
        run: |
          # + jq 파싱 실패 시 로그 남기고 종료 (디버깅 편의성 증가)
          set -e
          COMMENT=$(sed '/^```/d' review_result.txt | jq -c .) || {
            echo "❌ jq parsing failed"; cat review_result.txt; exit 1;
          }
          echo "comment=$COMMENT" >> $GITHUB_OUTPUT

      - name: Add Pull Request Review Comment
        if: env.EVENT_TYPE == 'pull_request'
        uses: nbaztec/add-pr-review-comment@v1.0.7
        with:
          comments: ${{ steps.store.outputs.comment }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          repo-token-user-login: 'github-actions[bot]'
          allow-repeats: false

      - name: Display review results in workflow log
        if: env.EVENT_TYPE == 'push'
        run: |
          echo "===== Gemini Code Review Results ====="
          cat review_result.txt
          echo "======================================"

      - name: Upload review results as artifact
        if: env.EVENT_TYPE == 'push'
        uses: actions/upload-artifact@v4
        with:
          name: gemini-code-review
          path: review_result.txt
